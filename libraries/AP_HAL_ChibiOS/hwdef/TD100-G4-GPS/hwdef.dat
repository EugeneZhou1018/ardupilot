# hw definition file for processing by chibios_pins.py
# MCU class and specific type

# MCU class and specific type
MCU STM32G4xx STM32G491xx

FLASH_RESERVE_START_KB 36

STORAGE_FLASH_PAGE 16
define HAL_STORAGE_SIZE 800

# board ID for firmware load
APJ_BOARD_ID 1053

# setup build for a peripheral firmware
env AP_PERIPH 1

# crystal frequency
OSCILLATOR_HZ 16000000

# ChibiOS system timer
STM32_ST_USE_TIMER 2
define CH_CFG_ST_FREQUENCY 1000000

# assume 512k flash part
FLASH_SIZE_KB 512

# ensure NRST_MODE is set to "Reset input only". This fixes
# an issue with resetting the CAN node and firmware update
define HAL_FLASH_SET_NRST_MODE 0x01

# SWD debugging
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

#----------UART Define----------#
# order of UARTs
SERIAL_ORDER USART1 USART2 USART3

# USART1, Ublox GPS
PB6 USART1_TX USART1
PB7 USART1_RX USART1

# USART2, USER Define
PA2 USART2_TX USART2
PA3 USART2_RX USART2

# USART3, Debug
PC10 USART3_TX USART3
PC11 USART3_RX USART3

STDOUT_SERIAL SD3
STDOUT_BAUDRATE 57600

#----------CAN Define----------#
# enable CAN support
PA11 CAN1_RX CAN1
PA12 CAN1_TX CAN1
PB3 GPIO_CAN1_SILENT OUTPUT PUSHPULL SPEED_LOW LOW

define HAL_NO_MONITOR_THREAD

define HAL_DEVICE_THREAD_STACK 768

#----------SPI Define----------#
# SPI1, IMU
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1

PC4 BMI088_A_CS CS
PB0 BMI088_G_CS CS

# SPI2, Mag & Baro
PB13 SPI2_SCK SPI2
PB14 SPI2_MISO SPI2
PB15 SPI2_MOSI SPI2

PB12 RM3100_CS CS
PB11 DPS310_CS CS

#----------SPI devices----------#
SPIDEV bmi088_a SPI1 DEVID1  BMI088_A_CS  MODE3  10*MHZ 10*MHZ
SPIDEV bmi088_g SPI1 DEVID2  BMI088_G_CS  MODE3  10*MHZ 10*MHZ
SPIDEV rm3100   SPI2 DEVID1  RM3100_CS    MODE0  1*MHZ  1*MHZ
SPIDEV dps310   SPI2 DEVID2  DPS310_CS    MODE3  5*MHZ  5*MHZ

# compass
COMPASS RM3100 SPI:rm3100 false ROTATION_NONE

# IMU
IMU BMI088 SPI:bmi088_a SPI:bmi088_g ROTATION_NONE

# Baro
BARO DPS310 SPI:dps310

#----------I2C Define----------#
# I2C buses
I2C_ORDER I2C2

# I2C2 bus, undefine
PA8 I2C2_SDA I2C2
PA9 I2C2_SCL I2C2

define HAL_USE_I2C TRUE
define STM32_I2C_USE_I2C2 TRUE

define HAL_I2C_INTERNAL_MASK 3
define HAL_I2C_CLEAR_ON_TIMEOUT 0

#----------PWM Define----------#
# WS2812 LED
PB5 TIM3_CH2 TIM3 PWM(1)

# PWM output for buzzer
PB9 TIM4_CH4 TIM4 GPIO(77) LOW ALARM

#----------Other Define----------#
# status LED
PC13 LED OUTPUT OPENDRAIN GPIO(1)
define HAL_LED_ON 0

# sensor power control
#PC11 VDD_3V3_SENSORS_EN OUTPUT HIGH

# GPS PPS
#PA15 GPS_PPS_IN INPUT

define HAL_USE_ADC FALSE
define STM32_ADC_USE_ADC1 FALSE
define HAL_DISABLE_ADC_DRIVER TRUE
define HAL_NO_GPIO_IRQ

# avoid RCIN thread to save memory
define HAL_NO_RCIN_THREAD

define HAL_USE_RTC FALSE
define DISABLE_SERIAL_ESC_COMM TRUE

define DMA_RESERVE_SIZE 0
define HAL_DISABLE_LOOP_DELAY

# we setup a small defaults.parm
define AP_PARAM_MAX_EMBEDDED_PARAM 256

# disable dual GPS and GPS blending to save flash space
define GPS_MAX_RECEIVERS 1
define GPS_MAX_INSTANCES 1
define HAL_COMPASS_MAX_SENSORS 1

# add support for moving baseline yaw
define GPS_MOVING_BASELINE 1

# GPS on 2nd port
define HAL_PERIPH_GPS_PORT_DEFAULT 1


#----------AP_Periph Define----------#
#define HAL_PERIPH_ENABLE_AHRS
define HAL_PERIPH_ENABLE_GPS
define HAL_PERIPH_ENABLE_MAG
define HAL_PERIPH_ENABLE_BARO

# also enable buzzer
define HAL_PERIPH_ENABLE_BUZZER_WITHOUT_NOTIFY 1

# do direct neopixel LED output to enable the 'rainbow' effect on
# startup
define HAL_PERIPH_NEOPIXEL_CHAN_WITHOUT_NOTIFY 0
define HAL_PERIPH_NEOPIXEL_COUNT_WITHOUT_NOTIFY 8
define DEFAULT_NTF_LED_TYPES 455

# keep ROMFS uncompressed as we don't have enough RAM
# to uncompress the bootloader at runtime
env ROMFS_UNCOMPRESSED True
