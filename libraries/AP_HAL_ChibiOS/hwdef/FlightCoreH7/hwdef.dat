USB_STRING_MANUFACTURER "TaiwanDrone100"

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# crystal frequency
OSCILLATOR_HZ 24000000

# board ID for firmware load
APJ_BOARD_ID 1018

FLASH_SIZE_KB 2048

# with 2M flash we can afford to optimize for speed
env OPTIMIZE -O2

# ChibiOS system timer
STM32_ST_USE_TIMER 2

FLASH_RESERVE_START_KB 128

# order of I2C buses
I2C_ORDER I2C1 I2C2 I2C3 I2C4

# order of UARTs (and USB)
SERIAL_ORDER OTG1 USART2 USART6 USART1 UART4 USART3 UART7 UART8

# This is the pin that senses USB being connected. It is an input pin
# setup as OPENDRAIN.
PA9 VBUS INPUT OPENDRAIN

# now we define the pins that USB is connected on
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

# These are the pins for SWD debugging with a STlinkv2 or black-magic probe.
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD


#----------CAN BUS Define----------#
# the first CAN bus
PD0 CAN1_RX CAN1
PD1 CAN1_TX CAN1

# This defines the pins for the 2nd CAN interface
PB12 CAN2_RX CAN2
PB13 CAN2_TX CAN2

#----------I2C Define----------#
# I2C1
PB8 I2C1_SCL I2C1
PB9 I2C1_SDA I2C1

# I2C2
PF1 I2C2_SCL I2C2
PF0 I2C2_SDA I2C2

# I2C3
PH7 I2C3_SCL I2C3
PH8 I2C3_SDA I2C3

# I2C4
PF14 I2C4_SCL I2C4
PF15 I2C4_SDA I2C4
#define HAL_I2C_INTERNAL_MASK 1

#----------SPI Define----------#
# SPI1 - internal sensors
PG11 SPI1_SCK SPI1
PG9 SPI1_MISO SPI1
PD7 SPI1_MOSI SPI1

# SPI2 - FRAM
PI1 SPI2_SCK SPI2
PI2 SPI2_MISO SPI2
PI3 SPI2_MOSI SPI2

# SPI4
PE2 SPI4_SCK SPI4
PE13 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4

# SPI5 - external1 sensors
PF7 SPI5_SCK SPI5
PF8 SPI5_MISO SPI5
PF9 SPI5_MOSI SPI5

# SPI6
PB3 SPI6_SCK SPI6
PA6 SPI6_MISO SPI6
PG14 SPI6_MOSI SPI6

#----------SPI CS Define----------#
# SPI1 - on board BMI088 & DPS310
PK4     BMI088_A_CS CS
PK5	    BMI088_G_CS CS
PG10    DPS310_CS   CS

# SPI2 - only FRAM
PH15     FRAM_CS     CS SPEED_VERYLOW

# SPI4
PI9	    SPARE_SPI4_CS1    CS
PI10	SPARE_SPI4_CS2    CS
PI11	SPARE_SPI4_CS3    CS

# SPI5 - external sensors
PF3	    ICM42688_CS       CS
PF4	    ICM42688_CS2      CS
PF5	    DPS310_EXT_CS      CS

# SPI6
PI12	SPARE_SPI6_CS1    CS
PI13	SPARE_SPI6_CS2    CS
PI14	SPARE_SPI6_CS3    CS

#----------UART Define----------#
# USART1 (GPS1)
PB7 USART1_RX USART1 NODMA
PB6 USART1_TX USART1 NODMA

# USART2（Telem1）
PD6 USART2_RX USART2
PD5 USART2_TX USART2
PD3 USART2_CTS USART2
PD4 USART2_RTS USART2

# UART3 (?)
PD9 USART3_RX  USART3
PD8 USART3_TX  USART3

# UART4 (GPS2)
PH14 UART4_RX UART4 NODMA
PH13 UART4_TX UART4 NODMA

# USART6 is (Telem2)
PC7 USART6_RX USART6 
PC6 USART6_TX USART6
PG15 USART6_CTS USART6
PG8 USART6_RTS USART6

# UART7 (DEBUG)
PF6 UART7_RX UART7 NODMA
PE8 UART7_TX UART7 NODMA

# UART8 (RC)
PE0 UART8_RX UART8
PE1 UART8_TX UART8 

#----------RC Define----------#
# RC input
PB4 TIM3_CH1 TIM3 RCININT PULLDOWN LOW

#----------OUTPUT Define----------#
# Now we start defining some PWM pins. We also map these pins to GPIO
# values, so users can set BRD_PWM_COUNT to choose how many of the PWM
# outputs on the primary MCU are setup as PWM and how many as
# GPIOs. To match HAL_PX4 we number the GPIOs for the PWM outputs
# starting at 50.
PH10 TIM5_CH1 TIM5 PWM(1) GPIO(50)
PH11 TIM5_CH2 TIM5 PWM(2) GPIO(51)
PH12 TIM5_CH3 TIM5 PWM(3) GPIO(52)
PI0  TIM5_CH4 TIM5 PWM(4) GPIO(53)
PD12 TIM4_CH1 TIM4 PWM(5) GPIO(54)
PD13 TIM4_CH2 TIM4 PWM(6) GPIO(55)
PD14 TIM4_CH3 TIM4 PWM(7) GPIO(56)
PD15 TIM4_CH4 TIM4 PWM(8) GPIO(57)

PE9  TIM1_CH1  TIM1  PWM(9)  GPIO(58)
PE11 TIM1_CH2  TIM1  PWM(10) GPIO(59)
PA10 TIM1_CH3  TIM1  PWM(11) GPIO(60)
PE14 TIM1_CH4  TIM1  PWM(12) GPIO(61)
PH6  TIM12_CH1 TIM12 PWM(13) GPIO(62) NODMA
PH9  TIM12_CH2 TIM12 PWM(14) GPIO(63) NODMA

#----------BUZZER----------#
# PWM output for buzzer
PE5 TIM15_CH1 TIM15 GPIO(77) ALARM

#----------POWER FLAG----------#
# Power flag pins: these tell the MCU the status of the various power
# supplies that are available. The pin names need to exactly match the
# names used in AnalogIn.cpp. 
PG0 VDD_BRICK_nVALID INPUT PULLUP
PG1 VDD_BRICK2_nVALID INPUT PULLUP

# This input pin is used to detect that power is valid on USB.
PG2 VBUS_nVALID INPUT PULLUP

#----------ADC----------#
# Now the VDD sense pin. This is used to sense primary board voltage.
PA5 VDD_5V_SENS ADC1 SCALE(2)

# analog in (POWER1)
PA3 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PA4 BATT_CURRENT_SENS ADC1 SCALE(1)

# This defines more ADC inputs.(POWER2)
PF11 BATT2_VOLTAGE_SENS ADC1 SCALE(1)
PF12 BATT2_CURRENT_SENS ADC1 SCALE(1)

# ADC1 SPARE (SPARE 1&2)
PC2 SPARE1_ADC1 ADC1 SCALE(1)
PC3 SPARE2_ADC1 ADC1 SCALE(1)

# RSSI
PA0 RSSI_IN ADC1 SCALE(1)

define HAL_BATT_VOLT_PIN 15
define HAL_BATT_CURR_PIN 18
define HAL_BATT2_VOLT_PIN 2
define HAL_BATT2_CURR_PIN 6
define HAL_BATT_VOLT_SCALE 12.09
define HAL_BATT_CURR_SCALE 36.5

#----------GPIO----------#
PB10 HEATER_EN OUTPUT LOW GPIO(80)
define HAL_HEATER_GPIO_PIN 80
define HAL_HAVE_IMU_HEATER 1
define HAL_IMU_TEMP_DEFAULT 45

#----------LED----------#
PI5  LED_RED   OUTPUT OPENDRAIN GPIO(0)
PI6  LED_GREEN OUTPUT OPENDRAIN GPIO(1)
PI7  LED_BLUE  OUTPUT OPENDRAIN GPIO(2)

define HAL_HAVE_PIXRACER_LED
define HAL_GPIO_A_LED_PIN 0
define HAL_GPIO_B_LED_PIN 1
define HAL_GPIO_C_LED_PIN 2

#----------Safety----------#
define HAL_HAVE_SAFETY_SWITCH 1
PE12 LED_SAFETY OUTPUT
PE10 SAFETY_IN INPUT PULLDOWN

#----------MicroSD----------#
PC8 SDMMC1_D0 SDMMC1
PC9 SDMMC1_D1 SDMMC1
PC10 SDMMC1_D2 SDMMC1
PC11 SDMMC1_D3 SDMMC1
PC12 SDMMC1_CK SDMMC1
PD2 SDMMC1_CMD SDMMC1
#PB2 CARD_DETECT

#----------SPI devices----------#
# external
SPIDEV icm42688_1     SPI5 DEVID1  ICM42688_CS     MODE3  2*MHZ  8*MHZ
SPIDEV icm42688_2     SPI5 DEVID2  ICM42688_CS2    MODE3  2*MHZ  8*MHZ
SPIDEV dps310_ext     SPI5 DEVID3  DPS310_EXT_CS   MODE3  5*MHZ  5*MHZ
# on board
SPIDEV bmi088_a       SPI1 DEVID1  BMI088_A_CS     MODE3  10*MHZ 10*MHZ
SPIDEV bmi088_g       SPI1 DEVID2  BMI088_G_CS     MODE3  10*MHZ 10*MHZ
SPIDEV dps310         SPI1 DEVID3  DPS310_CS       MODE3  5*MHZ  5*MHZ
SPIDEV ramtron        SPI2 DEVID1  FRAM_CS         MODE3  8*MHZ  8*MHZ

# external IMU
IMU Invensensev3 SPI:icm42688_1 ROTATION_ROLL_180
IMU Invensensev3 SPI:icm42688_2 ROTATION_PITCH_180

# on board IMU
IMU BMI088 SPI:bmi088_a SPI:bmi088_g ROTATION_ROLL_180_YAW_90

# external baro
BARO DPS310 SPI:dps310_ext

# on board baro
BARO DPS310 SPI:dps310

# on board compass
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
COMPASS IST8310 I2C:ALL_EXTERNAL:0x0E true  ROTATION_ROLL_180_YAW_90
COMPASS IST8310 I2C:ALL_INTERNAL:0x0E false ROTATION_ROLL_180_YAW_90

#----------END of define----------#

# enable RAMTROM parameter storage
define HAL_STORAGE_SIZE 32768
define HAL_WITH_RAMTRON 1

# Enable FAT filesystem support (needs a microSD defined via SDMMC).
define HAL_OS_FATFS_IO 1
define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

DMA_PRIORITY  ADC* SPI1* TIM*UP*
DMA_NOSHARE  SPI1* TIM*UP* 





